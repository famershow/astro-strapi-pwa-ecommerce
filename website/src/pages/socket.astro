<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Astro Socket.IO Demo</title>
    <!-- Include Socket.IO client library from a CDN -->
    <script src="https://cdn.socket.io/4.5.0/socket.io.min.js"></script>
  </head>
  <body>
    <h1>Astro Socket.IO Connection</h1>
    <p id="status">Connecting to the server...</p>
    <div id="log"></div>

    <script>
      // Define the server URL
      const SERVER_URL = "http://192.168.56.10:1337";

      const jwtCookie = document.cookie
        .split("; ")
        .find((row) => row.startsWith("jwt"));
      const jwtToken = jwtCookie ? jwtCookie.split("=")[1] : null;

      if (!jwtToken) {
        console.error("JWT token not found");
      }

      window.onload = function () {
        // Establish a connection using Socket.IO
        // @ts-ignore
        const socket = io(SERVER_URL, {
          query: { token: jwtToken },
        });

        socket.on("connect", () => {
          socket.on("product:create", (data: any) => {
            console.log("product created!");
            console.log(data);
          });
          socket.on("product:update", (data: any) => {
            console.log("article updated!");
            console.log(data);
          });
          socket.on("product:delete", (data: any) => {
            console.log("article deleted!");
            console.log(data);
          });
          console.log("Socket.IO is connected.");
        });
        // Handle connection
        // socket.on("connect", function () {
        //   // document.getElementById("status").innerText = "Connected!";
        // });

        // // Handle messages received from the server
        // socket.on("message", function (data: any) {
        //   console.log("Message from server: " + data);
        //   //const log = document.getElementById("log");
        //   //log.innerHTML += `<p>${data}</p>`;
        // });

        // // Handle disconnection
        // socket.on("disconnect", function () {
        //   console.log("Socket.IO connection closed.");
        //   //document.getElementById("status").innerText = "Disconnected!";
        // });

        // // Handle errors
        // socket.on("connect_error", function (error: any) {
        //   console.error("Socket.IO error: ", error);
        //   //document.getElementById("status").innerText = "Connection error!";
        // });
      };
    </script>
  </body>
</html>
